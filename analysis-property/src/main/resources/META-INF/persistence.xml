<!-- Default EJB3 EntityManager configuration file for a Hibernate provider

To do: many of these properties need to be able to be changed -->
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
      version="1.0">
      <persistence-unit name="DefaultEntityManager" transaction-type="RESOURCE_LOCAL">
         <provider>org.hibernate.ejb.HibernatePersistence</provider>
         <!--<non-jta-data-source></non-jta-data-source>-->
         <!--<jta-data-source>java:/DefaultDS</jta-data-source>         -->
         <properties>
            <property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"/>

            <property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver"/>
            <property name="hibernate.connection.url" value="jdbc:hsqldb:mem:mem"/>
            <property name="hibernate.connection.username" value="sa"/>
            <property name="hibernate.connection.password" value=""/>

            <!-- JDBC connection pool (use the built-in) -->
            <property name="hibernate.connection.pool_size" value="1"/>


            <!-- Enable Hibernate's automatic session context management -->
            <property name="hibernate.current_session_context_class" value="thread"/>

            <!-- Disable the second-level cache  -->
            <property name="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider"/>

            <!-- Echo all executed SQL to stdout -->
            <property name="hibernate.show_sql" value="true"/>

            <!-- Drop and re-create the database schema on startup -->
            <property name="hibernate.hbm2ddl.auto" value="create"/>

            <property name="hibernate.transaction.auto_close_session" value="false"/>

         </properties>

      </persistence-unit>

  <persistence-unit name="TestPremiseAnalysisPersistenceUnit" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.ejb.HibernatePersistence</provider>

    <mapping-file>META-INF/queries_premise.xml</mapping-file>
    <mapping-file>META-INF/queries_advertisement.xml</mapping-file>
    <mapping-file>META-INF/queries_address.xml</mapping-file>
    <mapping-file>META-INF/queries_accounting.xml</mapping-file>
    <mapping-file>META-INF/queries_party.xml</mapping-file>
    <mapping-file>META-INF/queries_substitution.xml</mapping-file>
    <mapping-file>META-INF/queries_region.xml</mapping-file>
    <mapping-file>META-INF/queries_tag.xml</mapping-file>

    <!-- Persistent classes from the Framework module-->
    <class>com.blueskyminds.framework.measurement.Quantity</class>
    <class>com.blueskyminds.framework.measurement.Area</class>

    <class>com.blueskyminds.framework.datetime.Timespan</class>
    <class>com.blueskyminds.framework.datetime.TimeOfDay</class>
    <class>com.blueskyminds.framework.datetime.TimePeriod</class>

    <class>com.blueskyminds.framework.recurrence.Recurrence</class>
    <class>com.blueskyminds.framework.recurrence.MonthlyRecurrence</class>
    <class>com.blueskyminds.framework.recurrence.HourlyRecurrence</class>
    <class>com.blueskyminds.framework.recurrence.OnceOffRecurrence</class>
    <class>com.blueskyminds.framework.recurrence.strategy.RecurrenceStrategy</class>
    <class>com.blueskyminds.framework.recurrence.strategy.LastDayOfMonth</class>
    <class>com.blueskyminds.framework.recurrence.strategy.NthDayOfMonth</class>
    <class>com.blueskyminds.framework.recurrence.strategy.NthDayOfWeekOfMonth</class>
    <class>com.blueskyminds.framework.recurrence.strategy.OnSpecificDate</class>
    <class>com.blueskyminds.framework.recurrence.constraint.RecurrenceConstraint</class>
    <class>com.blueskyminds.framework.recurrence.constraint.After</class>
    <class>com.blueskyminds.framework.recurrence.constraint.Before</class>
    <class>com.blueskyminds.framework.recurrence.constraint.NoEarlierThan</class>
    <class>com.blueskyminds.framework.recurrence.constraint.NoLaterThan</class>

    <class>com.blueskyminds.framework.memento.CaretakerDomainObject</class>

    <class>com.blueskyminds.framework.tasks.Task</class>
    <class>com.blueskyminds.framework.tasks.TaskGroup</class>
    <class>com.blueskyminds.framework.tasks.TaskPlan</class>

    <class>com.blueskyminds.framework.tools.substitutions.Substitution</class>

    <!--- end of framework -->

     <!-- enterprise persistent entities -->
        <class>com.blueskyminds.enterprise.Enterprise</class>
        <class>com.blueskyminds.enterprise.Schedule</class>

        <class>com.blueskyminds.enterprise.party.Party</class>
        <class>com.blueskyminds.enterprise.party.Organisation</class>
        <class>com.blueskyminds.enterprise.party.Company</class>
        <class>com.blueskyminds.enterprise.party.Individual</class>
        <class>com.blueskyminds.enterprise.party.SystemParty</class>
        <class>com.blueskyminds.enterprise.party.IndividualRelationship</class>
        <class>com.blueskyminds.enterprise.party.IndividualRole</class>
        <class>com.blueskyminds.enterprise.party.IndividualRoleMap</class>
        <class>com.blueskyminds.enterprise.party.ScheduleOfParties</class>
        <class>com.blueskyminds.enterprise.party.PartyTagMap</class>

        <class>com.blueskyminds.enterprise.contact.PartyPOC</class>
        <class>com.blueskyminds.enterprise.contact.PointOfContact</class>
        <class>com.blueskyminds.enterprise.contact.POCRoleMap</class>
        <class>com.blueskyminds.enterprise.contact.Website</class>
        <class>com.blueskyminds.enterprise.contact.ContactAddress</class>
        <class>com.blueskyminds.enterprise.contact.PhoneNumber</class>
        <class>com.blueskyminds.enterprise.contact.EmailAddress</class>
        <class>com.blueskyminds.enterprise.contact.POCTagMap</class>
        <class>com.blueskyminds.enterprise.contact.POCInteraction</class>
        <class>com.blueskyminds.enterprise.contact.PCIMap</class>

        <class>com.blueskyminds.enterprise.tag.Tag</class>

        <class>com.blueskyminds.enterprise.pricing.Contract</class>
        <class>com.blueskyminds.enterprise.pricing.ScheduleOfContracts</class>
        <class>com.blueskyminds.enterprise.pricing.ContractProductPriceMap</class>
        <class>com.blueskyminds.enterprise.pricing.ContractProductPricePk</class>
        <class>com.blueskyminds.enterprise.pricing.policy.PricingPolicy</class>
        <class>com.blueskyminds.enterprise.pricing.policy.FixedPrice</class>
        <class>com.blueskyminds.enterprise.pricing.policy.RecurringPrice</class>
        <class>com.blueskyminds.enterprise.pricing.policy.TransactionFee</class>
        <class>com.blueskyminds.enterprise.pricing.Product</class>
        <class>com.blueskyminds.enterprise.pricing.Price</class>
        <class>com.blueskyminds.enterprise.pricing.Money</class>
        <class>com.blueskyminds.enterprise.pricing.Fee</class>
        <class>com.blueskyminds.enterprise.pricing.ProductList</class>
        <class>com.blueskyminds.enterprise.pricing.terms.Terms</class>
        <class>com.blueskyminds.enterprise.pricing.terms.PrepaidInFull</class>
        <class>com.blueskyminds.enterprise.pricing.terms.PrepaidRecurring</class>
        <class>com.blueskyminds.enterprise.pricing.JournalisableDocument</class>
        <class>com.blueskyminds.enterprise.pricing.CommercialDocument</class>
        <class>com.blueskyminds.enterprise.pricing.CommercialDocumentItem</class>
        <class>com.blueskyminds.enterprise.pricing.ScheduleOfOrders</class>
        <class>com.blueskyminds.enterprise.pricing.Order</class>
        <class>com.blueskyminds.enterprise.pricing.ScheduleOfInvoices</class>
        <class>com.blueskyminds.enterprise.pricing.Invoice</class>
        <class>com.blueskyminds.enterprise.pricing.ScheduleOfReceipts</class>
        <class>com.blueskyminds.enterprise.pricing.Receipt</class>
        <class>com.blueskyminds.enterprise.pricing.ReceiptMoneyAllocation</class>

        <!--<class>com.blueskyminds.enterprise.license.License</class>-->
        <!--<class>com.blueskyminds.enterprise.license.RegionLicense</class>-->

        <!--<class>com.blueskyminds.enterprise.region.RegionScheme</class>-->
        <!--<class>com.blueskyminds.enterprise.region.Region</class>-->

        <class>com.blueskyminds.enterprise.accounting.ChartOfAccounts</class>
        <class>com.blueskyminds.enterprise.accounting.FinancialJournal</class>
        <class>com.blueskyminds.enterprise.accounting.FinancialTransaction</class>
        <class>com.blueskyminds.enterprise.accounting.Account</class>
        <class>com.blueskyminds.enterprise.accounting.AccountEntry</class>
        <class>com.blueskyminds.enterprise.accounting.DetailAccount</class>
        <class>com.blueskyminds.enterprise.accounting.SummaryAccount</class>

        <class>com.blueskyminds.enterprise.license.ScheduleOfLicenses</class>
        <class>com.blueskyminds.enterprise.license.License</class>
        <class>com.blueskyminds.enterprise.license.LicenseEntry</class>
        <class>com.blueskyminds.enterprise.license.LicenseJournal</class>
        <class>com.blueskyminds.enterprise.license.LicenseTransaction</class>
        <class>com.blueskyminds.enterprise.license.ScheduleOfLicenseAccounts</class>
        <class>com.blueskyminds.enterprise.license.LicenseAccount</class>
        <class>com.blueskyminds.enterprise.license.UnallocatedAccount</class>
        <class>com.blueskyminds.enterprise.license.UnavailableAccount</class>
        <class>com.blueskyminds.enterprise.license.LicenseAllocation</class>

        <class>com.blueskyminds.enterprise.ProductAccountMap</class>
        <class>com.blueskyminds.enterprise.ProductAccountMapEntry</class>
        <class>com.blueskyminds.enterprise.TaxAccountMap</class>
        <class>com.blueskyminds.enterprise.TaxAccountMapEntry</class>

        <class>com.blueskyminds.enterprise.taxpolicy.TaxPolicy</class>
        <class>com.blueskyminds.enterprise.taxpolicy.FixedTax</class>
        <class>com.blueskyminds.enterprise.taxpolicy.GraduatedTax</class>
        <class>com.blueskyminds.enterprise.taxpolicy.GraduatedTaxEntry</class>
        <class>com.blueskyminds.enterprise.taxpolicy.ScheduleOfTaxes</class>

        <!-- add the entire address package -->
        <!--<class>com.blueskyminds.enterprise.address.Country</class>-->
        <!--<class>com.blueskyminds.enterprise.address.State</class>-->
        <!--<class>com.blueskyminds.enterprise.address.Suburb</class>-->
        <class>com.blueskyminds.enterprise.address.Street</class>
        <!--<class>com.blueskyminds.enterprise.address.PostCode</class>-->
        <class>com.blueskyminds.enterprise.address.AddressList</class>
        <class>com.blueskyminds.enterprise.address.Address</class>
        <class>com.blueskyminds.enterprise.address.StreetAddress</class>
        <class>com.blueskyminds.enterprise.address.LotAddress</class>
        <class>com.blueskyminds.enterprise.address.UnitAddress</class>
        <class>com.blueskyminds.enterprise.address.MultilineAddress</class>
        <class>com.blueskyminds.enterprise.address.PlainTextAddress</class>
        <class>com.blueskyminds.enterprise.address.SuburbStreetMap</class>

        <class>com.blueskyminds.enterprise.region.RegionOLD</class>
        <class>com.blueskyminds.enterprise.region.RegionMapOLD</class>

        <class>com.blueskyminds.enterprise.regionx.RegionHierarchy</class>
        <class>com.blueskyminds.enterprise.regionx.RegionAlias</class>
        <class>com.blueskyminds.enterprise.regionx.RegionHandle</class>
        <class>com.blueskyminds.enterprise.regionx.country.CountryHandle</class>
        <class>com.blueskyminds.enterprise.regionx.country.CountryX</class>
        <class>com.blueskyminds.enterprise.regionx.state.StateHandle</class>
        <class>com.blueskyminds.enterprise.regionx.state.StateX</class>
        <class>com.blueskyminds.enterprise.regionx.postcode.PostCodeHandle</class>
        <class>com.blueskyminds.enterprise.regionx.postcode.PostCodeX</class>
        <class>com.blueskyminds.enterprise.regionx.suburb.SuburbHandle</class>
        <class>com.blueskyminds.enterprise.regionx.suburb.SuburbX</class>

       <class>com.blueskyminds.landmine.core.property.Premise</class>
       <class>com.blueskyminds.landmine.core.property.PremiseAttributeSetMap</class>
       <class>com.blueskyminds.landmine.core.property.PremiseAttributeSet</class>
       <class>com.blueskyminds.landmine.core.property.FeatureList</class>
       <class>com.blueskyminds.landmine.core.property.FeatureListEntry</class>
       <class>com.blueskyminds.landmine.core.property.AskingPrice</class>
       <class>com.blueskyminds.landmine.core.property.PremiseAddressMap</class>
       <class>com.blueskyminds.landmine.core.property.PropertyAdvertisement</class>
       <class>com.blueskyminds.landmine.core.property.PropertyAdvertisementContact</class>

    <!-- Analysis -->
        <class>com.blueskyminds.analysis.core.sets.AggregateSet</class>
        <class>com.blueskyminds.analysis.core.sets.IntersectionSet</class>
        <class>com.blueskyminds.analysis.core.sets.IntersectionSetEntry</class>
        <class>com.blueskyminds.analysis.core.sets.UnionSet</class>
        <class>com.blueskyminds.analysis.core.sets.UnionSetEntry</class>
        <class>com.blueskyminds.analysis.core.sets.SimpleAggregateSet</class>
        <class>com.blueskyminds.analysis.core.sets.SimpleAggregateSetValue</class>
        <class>com.blueskyminds.analysis.core.sets.AggregateSetGroup</class>
        <class>com.blueskyminds.analysis.core.sets.AggregateSetGroupEntry</class>

        <class>com.blueskyminds.analysis.core.datasource.DataSource</class>

        <!-- Property analysis -->
        <class>com.blueskyminds.analysis.property.classification.PremiseAggregateSetMap</class>
        <class>com.blueskyminds.analysis.property.classification.PremiseRegionMap</class>


         <properties>
            <property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"/>

            <property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver"/>
            <property name="hibernate.connection.url" value="jdbc:hsqldb:mem:mem"/>
            <property name="hibernate.connection.username" value="sa"/>
            <property name="hibernate.connection.password" value=""/>

            <!-- JDBC connection pool (use the built-in) -->
            <property name="hibernate.connection.pool_size" value="1"/>


            <!-- Enable Hibernate's automatic session context management -->
            <property name="hibernate.current_session_context_class" value="thread"/>

            <!-- Disable the second-level cache  -->
            <property name="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider"/>

            <!-- Echo all executed SQL to stdout -->
            <property name="hibernate.show_sql" value="true"/>

            <!-- Drop and re-create the database schema on startup -->
            <property name="hibernate.hbm2ddl.auto" value="create"/>

            <property name="hibernate.transaction.auto_close_session" value="false"/>

         </properties>
      </persistence-unit>
    
</persistence>